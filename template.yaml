AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for aws-serverless-graphql-dynamodb

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  DemoGraphQLApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod 
  DemoGraphQLFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: graphql-lambda/
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      Policies:
        # Give DynamoDB Full Access to your Lambda Function
        - AmazonDynamoDBFullAccess
      Events:
        GraphQLQuery:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref DemoGraphQLApi
            Path: /graphql
            Method: post
  DemoDB:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: demoempdb
      PrimaryKey:
        Name: empId
        Type: Number
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5      
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DemoGraphQLApi:
    Description: "API Gateway endpoint URL for Prod stage for Demo Backend function"
    Value: !Sub "https://${DemoGraphQLApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/graphql/"
  DemoGraphQLFunction:
    Description: "GraphQL Lambda Function ARN"
    Value: !GetAtt DemoGraphQLFunction.Arn

